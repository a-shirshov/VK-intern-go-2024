basePath: /
consumes:
    - application/json
definitions:
    ActorRequest:
        properties:
            date_of_birth:
                description: Date of birth of the actor
                example: "2001-08-06"
                type: string
                x-go-name: DateOfBirth
            gender:
                description: Gender of the actor
                example: Мужской
                type: string
                x-go-name: Gender
            name:
                description: Name of the actor
                example: Леонардо Ди Каприо
                type: string
                x-go-name: Name
        required:
            - name
            - gender
            - date_of_birth
        type: object
        x-go-package: _/home/artyom/Self_Learning/VK-intern-go-2024/models
    BasicResponse:
        properties:
            status:
                type: string
                x-go-name: Status
        type: object
        x-go-package: _/home/artyom/Self_Learning/VK-intern-go-2024/models
    FilmRequest:
        properties:
            description:
                description: Description of film
                example: film_description
                type: string
                x-go-name: Description
            rating:
                description: Rating of the film
                example: 7
                format: int64
                maximum: 10
                type: integer
                x-go-name: Rating
            release_date:
                description: Release date of film
                example: "2023-03-17"
                type: string
                x-go-name: ReleaseDate
            title:
                description: Name of the actor
                example: Titanic
                type: string
                x-go-name: Title
        required:
            - title
            - description
            - release_date
            - rating
        type: object
        x-go-package: _/home/artyom/Self_Learning/VK-intern-go-2024/models
    actor:
        description: Actor represents actor in system
        properties:
            date_of_birth:
                description: Date of birth of the actor
                example: "2001-08-06"
                type: string
                x-go-name: DateOfBirth
            gender:
                description: Gender of the actor
                example: Мужской
                type: string
                x-go-name: Gender
            id:
                description: The id for this actor
                format: int64
                minimum: 1
                type: integer
                x-go-name: ID
            name:
                description: Name of the actor
                example: Леонардо Ди Каприо
                type: string
                x-go-name: Name
        required:
            - name
            - gender
            - date_of_birth
            - id
        type: object
        x-go-name: Actor
        x-go-package: _/home/artyom/Self_Learning/VK-intern-go-2024/models
    actorWithFilms:
        description: Actor with films in which playing
        properties:
            date_of_birth:
                description: Date of birth of the actor
                example: "2001-08-06"
                type: string
                x-go-name: DateOfBirth
            films:
                items:
                    $ref: '#/definitions/film'
                type: array
                x-go-name: Films
            gender:
                description: Gender of the actor
                example: Мужской
                type: string
                x-go-name: Gender
            id:
                description: The id for this actor
                format: int64
                minimum: 1
                type: integer
                x-go-name: ID
            name:
                description: Name of the actor
                example: Леонардо Ди Каприо
                type: string
                x-go-name: Name
        required:
            - name
            - gender
            - date_of_birth
            - id
        type: object
        x-go-name: ActorWithFilms
        x-go-package: _/home/artyom/Self_Learning/VK-intern-go-2024/models
    film:
        description: Film represents film in system
        properties:
            description:
                description: Description of film
                example: film_description
                type: string
                x-go-name: Description
            id:
                description: The id for this film
                format: int64
                minimum: 1
                type: integer
                x-go-name: ID
            rating:
                description: Rating of the film
                example: 7
                format: int64
                maximum: 10
                type: integer
                x-go-name: Rating
            release_date:
                description: Release date of film
                example: "2023-03-17"
                type: string
                x-go-name: ReleaseDate
            title:
                description: Name of the actor
                example: Titanic
                type: string
                x-go-name: Title
        required:
            - title
            - description
            - release_date
            - rating
        type: object
        x-go-name: Film
        x-go-package: _/home/artyom/Self_Learning/VK-intern-go-2024/models
    filmWithActors:
        description: To add film in a system. Film and actors list
        properties:
            actors:
                items:
                    type: string
                type: array
                x-go-name: Actors
            description:
                description: Description of film
                example: film_description
                type: string
                x-go-name: Description
            rating:
                description: Rating of the film
                example: 7
                format: int64
                maximum: 10
                type: integer
                x-go-name: Rating
            release_date:
                description: Release date of film
                example: "2023-03-17"
                type: string
                x-go-name: ReleaseDate
            title:
                description: Name of the actor
                example: Titanic
                type: string
                x-go-name: Title
        required:
            - title
            - description
            - release_date
            - rating
        type: object
        x-go-name: FilmWithActorsRequest
        x-go-package: _/home/artyom/Self_Learning/VK-intern-go-2024/models
info:
    description: '# Documentation for VK-Intern 2024 Ширшов Артём'
    title: VK-Intern 2024
    version: 1.0.0
paths:
    /actors:
        get:
            operationId: getActors
            responses:
                "200":
                    description: actorWithFilms
                    schema:
                        items:
                            $ref: '#/definitions/actorWithFilms'
                        type: array
                "500":
                    $ref: '#/responses/basicResponse'
            summary: Возращает список актёров с их фильмами.
            tags:
                - Actors
        post:
            description: Добавляет актёра в систему
            operationId: addActor
            parameters:
                - description: Данные о актёре
                  in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/ActorRequest'
            responses:
                "200":
                    $ref: '#/responses/actor'
                "400":
                    $ref: '#/responses/basicResponse'
                "401":
                    $ref: '#/responses/basicResponse'
                "500":
                    $ref: '#/responses/basicResponse'
            security:
                - key: []
            tags:
                - Actors
    /actors/{id}:
        delete:
            operationId: deleteActor
            parameters:
                - description: ID актёра
                  format: int64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/basicResponse'
                "400":
                    $ref: '#/responses/basicResponse'
                "401":
                    $ref: '#/responses/basicResponse'
                "500":
                    $ref: '#/responses/basicResponse'
            security:
                - key: []
            summary: Удаляет актёра из системы.
            tags:
                - Actors
        put:
            operationId: updateActor
            parameters:
                - description: ID актёра
                  format: int64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
                - description: Данные об актёре
                  in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/actor'
            responses:
                "200":
                    $ref: '#/responses/basicResponse'
                "400":
                    $ref: '#/responses/basicResponse'
                "401":
                    $ref: '#/responses/basicResponse'
                "500":
                    $ref: '#/responses/basicResponse'
            security:
                - key: []
            summary: Обновляет информацию об актёре. На вход полная информация.
            tags:
                - Actors
    /film:
        get:
            description: Возвращает список фильмов по фрагменту названия или фрагмена имени актёра
            operationId: getFilm
            parameters:
                - description: Поиск по фрагменту названия
                  in: query
                  name: title
                  type: string
                  x-go-name: Title
                - description: Поиск по фрагменту имени актёра
                  in: query
                  name: actor
                  type: string
                  x-go-name: Actor
            responses:
                "200":
                    description: film
                    schema:
                        items:
                            $ref: '#/definitions/film'
                        type: array
                "500":
                    $ref: '#/responses/basicResponse'
            tags:
                - Films
    /films:
        get:
            description: Возвращает список фильмов. Можно указать поле для сортировки, по умолчанию - по рейтингу
            operationId: getFilms
            parameters:
                - description: Параметр для сортировки. Возможные поля - rating, title, release_date
                  in: query
                  name: sort_by
                  type: string
                  x-go-name: SortBy
            responses:
                "200":
                    description: film
                    schema:
                        items:
                            $ref: '#/definitions/film'
                        type: array
                "500":
                    $ref: '#/responses/basicResponse'
            tags:
                - Films
        post:
            description: "Добавляет новый фильм в систему, совместно со списком актёров. \nЕсли актёра нет в базе - он пропускается и не записывается.\nАктёр добавляется заранее. Поиск происходит по имени."
            operationId: addFilm
            parameters:
                - description: Данные об фильме с актёрами
                  in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/filmWithActors'
            responses:
                "200":
                    $ref: '#/responses/basicResponse'
                "401":
                    $ref: '#/responses/basicResponse'
            security:
                - key: []
            tags:
                - Films
    /films/{id}:
        delete:
            description: Удаляет фильм из системы
            operationId: deleteFilm
            parameters:
                - description: ID фильма
                  format: int64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/basicResponse'
                "400":
                    $ref: '#/responses/basicResponse'
                "401":
                    $ref: '#/responses/basicResponse'
                "500":
                    $ref: '#/responses/basicResponse'
            security:
                - key: []
            tags:
                - Films
        put:
            operationId: updateFilm
            parameters:
                - description: Данные о фильме
                  in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/film'
                - description: ID фильма
                  format: int64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/basicResponse'
                "400":
                    $ref: '#/responses/basicResponse'
                "401":
                    $ref: '#/responses/basicResponse'
                "500":
                    $ref: '#/responses/basicResponse'
            security:
                - key: []
            summary: Обновляет информацию о фильме, на вход полный поступает вся информация о фильме.
            tags:
                - Films
produces:
    - application/json
responses:
    actor:
        description: An actor from database
        schema:
            $ref: '#/definitions/actor'
    basicResponse:
        description: Ответ системы. В случае успеха - ОК. Иначе описание ошибки
        schema:
            $ref: '#/definitions/BasicResponse'
schemes:
    - http
securityDefinitions:
    key:
        in: header
        name: Authorization
        type: apiKey
swagger: "2.0"
